name: Test

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  otp: '25.2.2'
  elixir: '1.14.3'
  node: '18.x'
  rust: '1.68.0'

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v3
      - name: Install Erlang & Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.otp }}
          elixir-version: ${{ env.elixir }}
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust }}
          override: true
      - name: Cache Mix
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ env.elixir }}-${{ env.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.elixir }}-${{ env.otp }}-
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.rustup
            ~/.cargo
          key: ${{ runner.os }}-rust-${{ env.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-
      - name: Install mix dependencies
        run: mix deps.get
      - name: Check formatting
        run: mix format --check-formatted
      - name: Compile
        run: mix compile
      - name: Install npm dependencies
        run: npm ci --prefix assets
      - name: Build assets
        run: cd assets && node_modules/webpack/bin/webpack.js --mode development
      - name: Setup database
        run: mix ecto.setup
      - name: Run tests
        run: mix test --include vt
