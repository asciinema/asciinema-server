version: 2
jobs:
  build:
    docker:
      - image: cimg/elixir:1.14.3-node
        environment:
          MIX_ENV: test
          DATABASE_URL: "postgres://postgres@localhost:5432/asciinema_test"
          NODE_OPTIONS: "--openssl-legacy-provider"
      - image: cimg/postgres:14.6
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: asciinema_test
          POSTGRES_HOST_AUTH_METHOD: trust

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Pull Submodules
          command: git submodule update --init --recursive
      - run:
          name: Install Hex
          command: mix local.hex --force
      - run:
          name: Fetch a copy of rebar
          command: mix local.rebar --force
      - restore_cache:
          key: deps-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
      - restore_cache:
          key: rust-cache-{{ .Branch }}-{{ checksum "native/vt_nif/Cargo.lock" }}
      - restore_cache:
          key: node-cache-{{ .Branch }}-{{ checksum "assets/package-lock.json" }}
      - run:
          name: Install Rust toolchain
          command: curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable
      - run:
          name: Inject cargo into shell
          command: echo 'source $HOME/.cargo/env' >> $BASH_ENV
      - run:
          name: Fetch dependencies
          command: mix do deps.get, deps.compile
      - run:
          name: Compile
          command: mix compile
      - run:
          name: Build assets
          command: cd assets && npm install && node_modules/webpack/bin/webpack.js --mode development
      - save_cache:
          key: deps-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths:
            - deps
            - _build
      - save_cache:
          key: rust-cache-{{ .Branch }}-{{ checksum "native/vt_nif/Cargo.lock" }}
          paths:
            - .rustup
            - .cargo
      - save_cache:
          key: node-cache-{{ .Branch }}-{{ checksum "assets/package-lock.json" }}
          paths:
            - assets/node_modules
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create database
          command: mix ecto.create
      - run:
          name: Migrate database
          command: mix ecto.migrate
      - run:
          name: Run mix.test
          command: mix test --include vt
